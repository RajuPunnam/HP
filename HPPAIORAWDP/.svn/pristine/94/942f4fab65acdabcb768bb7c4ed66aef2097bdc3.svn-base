package com.techouts.service;

import java.text.DateFormat;
import java.text.SimpleDateFormat;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DateUtil;
import org.springframework.stereotype.Service;

import com.aspose.cells.CellValueType;

@Service
public class ExcelService 
{
	int a=0;
	public  String getCellData(Cell cell)
	{
		SimpleDateFormat requiredDateFormat = new SimpleDateFormat("MM/dd/yyyy");
		String cellData = null;
		try
		{
			if(!(cell==null))
			{
			switch (cell.getCellType())
			{
			case Cell.CELL_TYPE_BOOLEAN:
				cellData=cell.getBooleanCellValue()+ "";
				break;
			case Cell.CELL_TYPE_FORMULA:

				switch (cell.getCachedFormulaResultType())
				{
				case Cell.CELL_TYPE_NUMERIC:
					if (DateUtil.isCellDateFormatted(cell))
					{
						cellData=requiredDateFormat.format(cell.getDateCellValue())+ "";
					} 
					else
					{
						cellData=cell.getNumericCellValue() +"";
					}
					break;
				case Cell.CELL_TYPE_STRING:
					cellData= cell.getStringCellValue()+ "";
					break;
				case Cell.CELL_TYPE_ERROR:
					cellData=cell.getErrorCellValue()+ "";
					break;
				case Cell.CELL_TYPE_BOOLEAN:
					cellData=cell.getBooleanCellValue()+ "";
					break;
				default:
					cellData=cell.getStringCellValue()+ "";
					break;
				}
				break;
			case Cell.CELL_TYPE_NUMERIC:
				if (DateUtil.isCellDateFormatted(cell))
				{
					cellData=requiredDateFormat.format(cell.getDateCellValue())+ "";
				} else
				{
				
					cellData=(int)cell.getNumericCellValue()+ "";
				}
				break;
			case Cell.CELL_TYPE_STRING:
				String str = cell.getStringCellValue();
				String st1 = new String();
				
				if (str.contains("\""))
				{
					String st[] = str.split("\"");
					for (int k = 0; k < st.length; k++)
					{
						st1 = st1 + st[k];
					}
					cellData=st1 + "";
				}
				else if(str.toString().equals("-"))
				{
					cellData="";
				}
				
				else
				{
					cellData= cell.getStringCellValue() + "";
				}
				break;
			case Cell.CELL_TYPE_ERROR:
				if(cell.getErrorCellValue()==42)
				{
				cellData= "";	
				}
				else
				{
				cellData= cell.getErrorCellValue()+ "";
				}
				break;
			case Cell.CELL_TYPE_BLANK:
				cellData= "";
				break;
			}
			}
			else
			{
				cellData= "";	
			}
		}catch(Exception e)
		{
			
		}
			return cellData;
		}
	
	public String getAsposeWorkbookCellData(com.aspose.cells.Cell cell)
	{
		a++;
	   DateFormat requiredDateFormat = new SimpleDateFormat("MM-dd-yyyy");
		String value=null;
	    switch(cell.getType())
	    {
	    case CellValueType.IS_STRING:
	    	value=cell.getStringValue();
	    	break;
	    case CellValueType.IS_NUMERIC:
	    	value=cell.getDoubleValue()+"";
	    	break;
	    case CellValueType.IS_BOOL:
	    	value=cell.getBoolValue()+"";
	    break;
	    case CellValueType.IS_DATE_TIME:
	    	value=requiredDateFormat.format(cell.getDateTimeValue().toDate())+"";
	    	if(a<=100)
	    	{
	    	//System.out.println(cell.getDateTimeValue().toDate());
	    	//System.out.println(value);
	    	}
	    	break;
	    case CellValueType.IS_ERROR:
	    	value=cell.getValue()+"";
	    	break;
	    case CellValueType.IS_NULL:
	    	//System.out.println("null"+cell.getValue());
	    	value="";
	    break;
	    case CellValueType.IS_UNKNOWN:
	    	//System.out.println("unknown"+cell.getValue());
	    	value="";
	    	break;
	    }
		return value.trim();
	}
}
