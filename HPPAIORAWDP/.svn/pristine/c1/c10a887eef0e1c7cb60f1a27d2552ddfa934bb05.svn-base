package com.techouts.workerthread;

import java.util.Properties;

import javax.annotation.Resource;

import org.apache.commons.net.ftp.FTPClient;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.techouts.pojo.FtpSupport;
import com.techouts.service.FtpService;
import com.techouts.service.OperatingStstem;

@Component
public class PcOpenOrdersWorkerThread implements Runnable {
	int count = 0;
	private static final Logger LOGGER = Logger
			.getLogger(PcOpenOrdersWorkerThread.class);
	@Autowired
	private FtpService ftpService;
	@Autowired
	private OperatingStstem operatingStstem;
	@Resource(name = "myProps")
	private Properties properties;
	private boolean methodCompleationStatus;

	@Override
	public synchronized void run() {
		int uploadStatusCount = 0;
		count++;
		System.out.println(count + " th time came into openorders");
		FtpSupport ftpSupport = new FtpSupport();
		ftpSupport.setServerAddress(properties.getProperty("flectronics.ftp.server"));
		ftpSupport.setUserName(properties.getProperty("flextronics.ftp.userId"));
		ftpSupport.setPassword(properties.getProperty("flectronice.ftp.password"));
		ftpSupport.setStaticFileDate(properties
				.getProperty("openorders.static.file.date"));
		ftpSupport.setCollectionName(properties
				.getProperty("orders.pc.collection.openorders"));
		ftpSupport.setDownLoadDirectory(operatingStstem.getOperatoingSystemDownloadPath());
		ftpSupport.setFieldName("Date");
		ftpSupport.setSubFolder(properties
				.getProperty("sub.folder.openoreders"));
		ftpSupport.setMailSubject(properties
				.getProperty("openorders.mail.subject"));
		ftpSupport.setMailBody(properties.getProperty("doi.mail.body"));
		ftpSupport.setFileType(".xl");
		try {
			FTPClient ftpClient = new FTPClient();
			if (ftpClient.isConnected()) {
				ftpClient.logout();
				ftpClient.disconnect();
			}
			methodCompleationStatus=false;
			uploadStatusCount = ftpService.getDownloadFtpFiles(ftpSupport,0);
		} catch (Exception e) {

			LOGGER.info(e.getMessage());
		}
		if (uploadStatusCount > 0) {
			LOGGER.info(uploadStatusCount + " new files found ");
		} else {
			LOGGER.info("no files found today");
		}

		methodCompleationStatus = true;
	}

	

	public boolean getDoiDownloadMethodCompleationStatus() {

		return methodCompleationStatus;
	}
}
