package com.techouts.hp.service;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.TreeMap;

import javax.annotation.Resource;
import javax.mail.MessagingException;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CreationHelper;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;

import com.techouts.hp.dao.StatusDao;
import com.techouts.hp.dto.DataStatus;
import com.techouts.hp.util.OS;

/**
 * StatusService class for generating current uploaded file s list
 * @author TO-OWDG-02
 *
 */
@Service
public class StatusService {
	@Resource(name = "myProps")
	private Properties prop;
	@Autowired
	private OS os;
	@Autowired
	private StatusDao statusDao;
	private static final String FILE_NAME="SPEND";
	private static final String FILE_ENDS_WITH="xlsx";

	/**
	 * Method for generating  current day uploaded files list
	 * @return
	 * @throws IOException
	 * @throws MessagingException
	 */
	public String getUploadedFilesList() throws IOException, MessagingException {
		String date = new SimpleDateFormat("MM-dd-yyyy").format(new Date());
		String fileFromat = String.format("%s_%s.%s", FILE_NAME, date, FILE_ENDS_WITH);
		Cell cell;
		List<DataStatus> filesList = statusDao.getCurrentDayUploadFilesList();
		XSSFWorkbook workbook = new XSSFWorkbook();
		CellStyle cellStyle = workbook.createCellStyle();
		CreationHelper createHelper = workbook.getCreationHelper();
		cellStyle.setDataFormat(createHelper.createDataFormat().getFormat(
				"mm/DD/yyyy hh:mm:ss"));
		XSSFSheet sheet = workbook.createSheet(date);
		XSSFRow row = sheet.createRow(0);
		row.createCell(5).setCellValue("SPEND STATUS");
		row = sheet.createRow(1);
		cell = row.createCell(0);
		cell.setCellValue("Source Folder");
		cell = row.createCell(1);
		cell.setCellValue("File Name");
		cell = row.createCell(2);
		cell.setCellValue("Upload Status");
		cell = row.createCell(3);
		cell.setCellValue("File Received Date");
		cell = row.createCell(4);
		cell.setCellValue("No Of Records");
		for (int i = 0; i < filesList.size(); i++) {
			row = sheet.createRow(i + 2);
			row.createCell(0).setCellValue(filesList.get(i).getFolderName());
			row.createCell(1).setCellValue(filesList.get(i).getFileName());
			row.createCell(2).setCellValue(
					filesList.get(i).isFileUploadStatus());
			row.createCell(3).setCellValue(
					filesList.get(i).getFileReceiveDate());
			row.createCell(4).setCellValue(filesList.get(i).getNoOfRecords());
		}
		File filePath = new File(os.getDownloadLocation() + File.separator
				+ prop.getProperty("main.folder"));
		if (!filePath.exists()) {
			filePath.mkdirs();
		}
		workbook.write(new FileOutputStream(filePath + File.separator
				+ fileFromat));
		return filePath + File.separator + fileFromat;
	}

	public Map<DataStatus, String> getCurrentDayUploadedFilesList() {
		List<DataStatus> filesList = statusDao.getCurrentDayUploadFilesList();
		Map<DataStatus, String> status = new LinkedHashMap<DataStatus, String>();
		for (DataStatus dataStatus : filesList) {
			if (!StringUtils.isEmpty(dataStatus.getFileName())) {
				status.put(dataStatus, dataStatus.getFileName());
			}
		}
		return status;
	}
}
